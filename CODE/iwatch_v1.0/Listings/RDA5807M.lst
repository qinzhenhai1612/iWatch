C51 COMPILER V9.52.0.0   RDA5807M                                                          07/19/2021 23:10:39 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE RDA5807M
OBJECT MODULE PLACED IN ..\Objects\RDA5807M.obj
COMPILER INVOKED BY: E:\install_files\keil\C51\BIN\C51.EXE ..\User\radio\RDA5807M.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDI
                    -R(..\User\oled;..\User\rtc;..\User\System;..\User;..\User\bluetooth;..\User\radio;..\User\sensor) DEBUG OBJECTEXTEND PRI
                    -NT(..\Listings\RDA5807M.lst) TABS(2) OBJECT(..\Objects\RDA5807M.obj)

line level    source

   1          #include "IIC.h"
   2          #include "stc8a.h"
   3          #include "RDA5807M.h"
   4          #include "intrins.h"
   5          #include "Delay.h"
   6          
   7          
   8          //RDA5807设置寄存器组，每个寄存器两个字节
   9          //设置寄存器
  10          unsigned int REG02 = 0x0000,REG03 = 0x0000,REG04 = 0x0040,REG05 = 0x9088;
  11          //状态寄存器
  12          unsigned int REG0A = 0x0000,REG0B = 0x0000;
  13          /********************设置参数**************************/
  14          unsigned int CHAN = 0;
  15          unsigned char BAND = 0;    //Banc Select
  16                                      //00 = 87-108 MHz(Default)
  17                                      //01 = 76-91 MHz
  18                                      //10 = 76-108MHz
  19                                      //11 = 65-76 MHz
  20          unsigned char SPACE = 0;  //Channel Spacing
  21                                      //00 = 100kHz(Default)  01 = 200kHz;
  22                                      //10 = 50kHz;           11 = 25kHz;
  23          unsigned char SEEKTH = 8;   //Seek SNR threshold value
  24          unsigned char VOLUME = 8;   //DAC Gain Control Bit(Volume)
  25                                      //0000 = min;   1111 = max
  26          float current_frequency;  //当前频率
  27          unsigned char RSSI;       //当前频道信号强度值
  28          /**************************************************************************/
  29          
  30          /**
  31            * @brief  RDA5807M写寄存器
  32            *         RDA5807M的的寄存器为16位，写寄存器时只能连续写入
  33            *         不能够单独写一个16位寄存器，这里使用IIC连续写入8字节
  34            *         即连续写RDA5807M中的4个主要设置寄存器REG02 ~ REG05
  35            * @param  无
  36            * @retval 无
  37            */
  38          void RDA5807MWriteRegs(void)
  39          {
  40   1        unsigned char reg[8];
  41   1        reg[0] = REG02 >> 8;
  42   1        reg[1] = REG02;
  43   1        reg[2] = REG03 >> 8;
  44   1        reg[3] = REG03;
  45   1        reg[4] = REG04 >> 8;
  46   1        reg[5] = REG04;
  47   1        reg[6] = REG05 >> 8;
  48   1        reg[7] = REG05;
  49   1        P_SW2 |= 0x10;
  50   1        I2C_NoAddr_Write_MultiBytes(RDA5807M_IIC_ADDR, 8, reg);
  51   1        P_SW2 &= ~0x10;
  52   1      }
  53          /**
C51 COMPILER V9.52.0.0   RDA5807M                                                          07/19/2021 23:10:39 PAGE 2   

  54            * @brief  RDA5807M读寄存器
  55            *         RDA5807M的的寄存器为16位，读寄存器时只能连续读出
  56            *         不能够单独读一个16位寄存器，这里使用IIC连续读出4字节
  57            *         即连续读出RDA5807M中的2个主要状态寄存器REG0A,REG0B
  58            * @param  无
  59            * @retval 无
  60            */
  61          void RDA5807MReadRges(void)
  62          {
  63   1        unsigned char read_buf[4];
  64   1        P_SW2 |= 0x10;
  65   1        I2C_NoAddr_Read_MultiBytes(RDA5807M_IIC_ADDR, 4, read_buf);
  66   1        P_SW2 &= ~0x10;
  67   1        REG0A = read_buf[0];
  68   1        REG0A <<= 8;
  69   1        REG0A |= read_buf[1];
  70   1        REG0B = read_buf[2];
  71   1        REG0B <<= 8;
  72   1        REG0B |= read_buf[3];
  73   1      }
  74          /**
  75            * @brief  RDA5807M初始化函数
  76            *         初始化后RDA5807M默认在睡眠模式
  77            * @param  无
  78            * @retval 0：失败
  79            *         1：成功
  80            */
  81          unsigned char RDA5807MInit(void)
  82          {
  83   1        // 发送软件复位指令
  84   1        REG02 |= SOFT_RST;
  85   1        RDA5807MWriteRegs();
  86   1        Delay1ms(10);
  87   1        //REG02 = 0xd001;   //禁止高阻输出，禁止静音，双声道，Bass boost enabled ，seek up,seek enable,循环搜索模
             -式，时钟源频率：32.768khz，Power Up Enable
  88   1        REG02 = 0x9000 | DMUTE;
  89   1        REG03 = (CHAN << 6) | (BAND << 2) | SPACE;
  90   1        REG04 = 0x0000;
  91   1        REG05 = 0x8080 | (SEEKTH << 8) | VOLUME;
  92   1        RDA5807MWriteRegs();
  93   1        return 1;
  94   1      }
  95          /**
  96            * @brief  RDA5807M设定音量
  97            * @param  VOLUME：音量（0~15）
  98            * @retval 无
  99            */
 100          void RDA5807MSetVOLUME(unsigned int VOLUME)
 101          {
 102   1        if(VOLUME > 0x0f)       //限幅
 103   1          VOLUME = 0x0f;
 104   1        REG05 &= ~0x000f;       //先清空原来的值
 105   1        REG05 |= VOLUME & 0x0f; //写入现有值
 106   1        RDA5807MWriteRegs();    //写入寄存器
 107   1      }
 108          /**
 109            * @brief  RDA5807M自动搜台
 110            * @param  direction：搜索方向
 111            *           UPWARD    向上搜台
 112            *           DOWNWARD  向下搜台
 113            * @retval 无
 114            */
C51 COMPILER V9.52.0.0   RDA5807M                                                          07/19/2021 23:10:39 PAGE 3   

 115          float RDA5807MSEEK(unsigned char direction)
 116          {
 117   1        static unsigned char step = 0;
 118   1        if(step == 0)
 119   1        {
 120   2          REG03 &= ~TUNE;     //disable tune
 121   2          if(direction == UPWARD) //seek up
 122   2            REG02 |= SEEK_UP;
 123   2          else                //seek down
 124   2            REG02 &= ~SEEK_UP;
 125   2          REG02 |= SEEK;      //enable seek
 126   2          RDA5807MWriteRegs();
 127   2          
 128   2          step++;
 129   2        }
 130   1        else if(step == 1)
 131   1        {
 132   2          RDA5807MReadRges();
 133   2          if((REG0A & 0x4000))//等待STC标志置位
 134   2          {
 135   3            REG02 &= ~SEEK;         //disable seek
 136   3            CHAN = REG0A & 0x03ff;
 137   3            current_frequency = (float)CHAN * 0.1 + 87;
 138   3            RSSI = (REG0B >> 9)&0x0003f;
 139   3            step = 0;
 140   3            return current_frequency;
 141   3          }
 142   2          else
 143   2            return 0;
 144   2        }
 145   1        return 0;
 146   1      }
 147          /**
 148            * @brief  RDA5807M设定频率（调频）
 149            * @param  fq：电台的频率（87 ~ 108）
 150            * @retval 无
 151            */
 152          void RDA5807MSetFq(float fq)
 153          {
 154   1        REG02 &= ~SEEK;     //disable seek
 155   1        REG03 |= TUNE;      //enable tune
 156   1        CHAN = fq * 10 - 870;
 157   1        REG03 &= 0x003f;
 158   1        REG03 |= (CHAN << 6);
 159   1        RDA5807MWriteRegs();
 160   1        RDA5807MReadRges();
 161   1        while((REG0A & 0x4000) == 0)    //等待STC 标志置位
 162   1        {
 163   2          Delay1ms(3);
 164   2          RDA5807MReadRges(); // 读取状态寄存器
 165   2        }
 166   1        REG03 &= ~TUNE;       //disable tune
 167   1        current_frequency = fq;
 168   1        RSSI = (REG0B >> 9)&0x0003f;
 169   1      }
 170          /**
 171            * @brief  获取当前收听的频道的频率
 172            * @param  无
 173            * @retval current_frequency：当前收听频道的频率
 174            */
 175          float RDA5807MGetCurrentFq(void)
 176          {
C51 COMPILER V9.52.0.0   RDA5807M                                                          07/19/2021 23:10:39 PAGE 4   

 177   1        RDA5807MReadRges();
 178   1        CHAN = REG0A & 0x03ff;
 179   1        current_frequency = (float)CHAN * 0.1 + 87;
 180   1        return current_frequency;
 181   1      }
 182          /**
 183            * @brief  获取当前收听的频道的信号强度值
 184            * @param  无
 185            * @retval RSSI：当前收听频道的信号强度值
 186            */
 187          unsigned char RDA5807MGetCurrentRSSI(void)
 188          {
 189   1        RDA5807MReadRges();
 190   1        RSSI = (REG0B >> 9)&0x0003f;
 191   1        RSSI = (float)CHAN * 0.1 + 87;
 192   1        return RSSI;
 193   1      }
 194          /**
 195            * @brief  使RDA5807M音频输出静音
 196            * @param  无
 197            * @retval 无
 198            */
 199          void RDA5807MSetMute(void)
 200          {
 201   1        REG02 &= ~DMUTE;
 202   1        RDA5807MWriteRegs();
 203   1      }
 204          /**
 205            * @brief  RDA5807M上电开机
 206            * @param  无
 207            * @retval 无
 208            */
 209          void RDA5807MPowerUp(void)
 210          {
 211   1        REG02 |= POWER_EN;
 212   1        RDA5807MWriteRegs();
 213   1      }
 214          /**
 215            * @brief  RDA5807M关机掉电（睡眠模式）
 216            * @param  无
 217            * @retval 无
 218            */
 219          void RDA5807MPowerDown(void)
 220          {
 221   1        REG02 &= ~POWER_EN;
 222   1        RDA5807MWriteRegs();
 223   1      }
 224          
 225          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    834    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     24      16
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
