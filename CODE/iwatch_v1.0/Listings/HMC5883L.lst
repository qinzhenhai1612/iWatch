C51 COMPILER V9.52.0.0   HMC5883L                                                          08/02/2021 23:10:21 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE HMC5883L
OBJECT MODULE PLACED IN ..\Objects\HMC5883L.obj
COMPILER INVOKED BY: E:\install_files\keil\C51\BIN\C51.EXE ..\User\sensor\HMC5883L.c LARGE OPTIMIZE(8,SPEED) BROWSE INCD
                    -IR(..\User\oled;..\User\rtc;..\User\System;..\User;..\User\bluetooth;..\User\radio;..\User\sensor) DEBUG OBJECTEXTEND PR
                    -INT(..\Listings\HMC5883L.lst) TABS(2) OBJECT(..\Objects\HMC5883L.obj)

line level    source

   1          #include "HMC5883L.h"
   2          #include "IIC.h"
   3          #include "Delay.h"
   4          #include "math.h"
   5          
   6          /******************************设置参数*************************************/
   7          unsigned char MA = 3;   //number of samples averaged (1 to 8) per measurement output.
   8                                  //00 = 1; 01 = 2; 10 = 4; 11 = 8(Default)
   9          unsigned char DO = 6;   //Typical Data Output Rate (Hz) 
  10                                  //000 = 0.75;   001 = 1.5;    010 = 3;    011 = 7.5
  11                                  //100 = 15(Default)   101 = 30;   110 = 75;   111 = Not Use;
  12          unsigned char MS = 0;   //Measurement Mode 
  13                                  //00 = Normal measurement configuration (Default). 
  14                                  //01 = a positive current is forced across the resistive load for all three axes.
  15                                  //10 = a negative current is forced across the resistive load for all three axes.
  16                                  //11 = reserved
  17          unsigned char GN = 1;   //Gain Configuration (GN = Recommended Sensor Field Range(Guass))
  18                                  //000 = +/-0.8Ga;   001 = +/-1.3Ga;   010 = +/-1.9Ga;   
  19                                  //011 = +/-2.5Ga;   100 = +/-4.0Ga;   101 = +/-4.7Ga;   
  20                                  //110 = +/-5.6Ga;   111 = +/-8.1Ga;   
  21          unsigned char MD = 2;   //Operating Mode 
  22                                  //00 = Continuous-Measurement Mode.
  23                                  //01 = Single-Measurement Mode (Default).
  24                                  //10 = Idle Mode.
  25          /*****************************校准参数************************************/                     
  26          int mag_x_offset = 0, mag_y_offset = 0, mag_z_offset = 0;   //零位校准参数
  27          float mag_y_scale = 1, mag_z_scale = 1;                     //幅度校准参数
  28          /*************************************************************************/
  29          
  30          /**
  31            * @brief  使用IIC总线往HMC5883L的寄存器中写一字节数据
  32            * @param  addr: 寄存器的地址
  33            * @param  dat:  待写入的数据
  34            * @retval 无
  35            */
  36          void HMC5883L_Write_Byte(unsigned char addr, unsigned char dat)
  37          {
  38   1        Single_WriteIIC(HMC5883L_IIC_ADDR, addr, dat);
  39   1      }
  40          /**
  41            * @brief  使用IIC总线从HMC5883L的寄存器中读一字节数据
  42            * @param  addr: 寄存器的地址
  43            * @retval 读出的一字节数据
  44            */
  45          unsigned char HMC5883L_Read_Byte(unsigned char addr)
  46          {
  47   1        unsigned char temp;
  48   1        temp = Single_ReadIIC(HMC5883L_IIC_ADDR, addr);
  49   1        return temp;
  50   1      }
  51          /**
  52            * @brief  检查与HMC5883L的连接是否正常
  53            * @param  无
C51 COMPILER V9.52.0.0   HMC5883L                                                          08/02/2021 23:10:21 PAGE 2   

  54            * @retval 1（成功），0（失败）
  55            */
  56          unsigned char CheckHMC5883LConnection(void)
  57          {
  58   1        if(HMC5883L_Read_Byte(0x0a) != 0x48)
  59   1          return 0;
  60   1        else
  61   1          return 1;
  62   1      }
  63          /**
  64            * @brief  从HMC5883L中读取读传感器原始数据
  65            * @param  buf：原始数据数组的指针，int*型
  66            * @retval 无
  67            */
  68          void Read_HMC5883L(int *buf)
  69          {
  70   1        unsigned char tp[6];
  71   1        I2C_Read_MultiBytes(HMC5883L_IIC_ADDR, 0x03, 6, tp);
  72   1        buf[0] = tp[0] << 8 | tp[1]; //Combine MSB and LSB of X Data output register  最高有效位
  73   1        buf[1] = tp[4] << 8 | tp[5]; //Combine MSB and LSB of Y Data output register
  74   1        buf[2] = tp[2] << 8 | tp[3]; //Combine MSB and LSB of Z Data output register 
  75   1        buf[0] -= mag_x_offset;
  76   1        buf[1] -= mag_y_offset;
  77   1        buf[2] -= mag_z_offset;
  78   1        buf[1] *= mag_y_scale;
  79   1        buf[2] *= mag_z_scale;
  80   1      }
  81          /**
  82            * @brief  设置HMC5883L原始数据的校准参数
  83            * @param  x_offset, x_offset, x_offset：对应轴的偏移
  84            *         y_scale：y轴对x轴的比例校准
  85            *         z_scale：z轴对x轴的比例校准
  86            * @retval 无
  87            */
  88          void HMC5883L_Set_Calibration_Value(int x_offset, int y_offset, int z_offset, float y_scale, float z_scale
             -)
  89          {
  90   1        mag_x_offset = x_offset;
  91   1        mag_y_offset = y_offset;
  92   1        mag_z_offset = z_offset;
  93   1        mag_y_scale = y_scale;
  94   1        mag_z_scale = z_scale;
  95   1      }
  96          /**
  97            * @brief  设置HMC5883L的工作模式
  98            * @param  mode：0 连续测量模式
  99            *               1 单次测量模式
 100            *               2 休眠模式
 101            * @retval 无
 102            */
 103          void HMC5883L_Set_Mode(unsigned char mode)
 104          {
 105   1        MD = mode;
 106   1        HMC5883L_Write_Byte(0x02, MD);
 107   1      }
 108          /**
 109            * @brief  HMC5883L初始化函数
 110            * @param  无
 111            * @retval 0：失败
 112            *         1：成功
 113            */
 114          unsigned char HMC5883L_Init(void)
C51 COMPILER V9.52.0.0   HMC5883L                                                          08/02/2021 23:10:21 PAGE 3   

 115          {
 116   1        unsigned char time_out = 200;
 117   1        while(CheckHMC5883LConnection() == 0)
 118   1        {
 119   2          Delay1ms(1);
 120   2          if(--time_out == 0)
 121   2            return 0;
 122   2        }
 123   1        HMC5883L_Write_Byte(0x00, (MA << 4) | (DO  << 2) | MS);
 124   1        HMC5883L_Write_Byte(0x01, (GN << 5));
 125   1        HMC5883L_Write_Byte(0x02, MD);
 126   1        //HMC5883L_Set_Calibration_Value(-83, 10, -74, 0.99041592, 1.16104081);
 127   1        return 1;
 128   1      }
 129          /**
 130            * @brief  根据x轴和y轴的倾角补偿磁偏角
 131            * @param  mag_data：三轴磁力数据
 132            *         ax，ay：x轴和y轴的倾角
 133            * @retval Yaw：补偿后的磁偏角
 134            */
 135          float HMC5883L_Get_AngleXY(int *mag_data, float ax, float ay)
 136          {
 137   1        float Yaw, RadX, RadY, Xh, Yh;
 138   1        RadX = -ax / 57.2957795f;
 139   1        RadY = -ay / 57.2957795f;
 140   1        Xh = mag_data[0] * cos(RadX) + mag_data[1] * sin(RadY) * sin(RadX) - mag_data[2] * cos(RadY) * sin(RadX);
 141   1        Yh = mag_data[1] * cos(RadY) + mag_data[2] * sin(RadY);
 142   1        Yaw = atan2(Yh, Xh) * 180 / 3.14159 + 180;
 143   1        return Yaw;
 144   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1108    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19      47
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
