C51 COMPILER V9.52.0.0   IIC                                                               09/12/2021 19:39:18 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN ..\Objects\IIC.obj
COMPILER INVOKED BY: E:\install_files\keil\C51\BIN\C51.EXE ..\User\System\IIC.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..
                    -\User\oled;..\User\rtc;..\User\System;..\User;..\User\bluetooth;..\User\radio;..\User\sensor) DEBUG OBJECTEXTEND PRINT(.
                    -.\Listings\IIC.lst) TABS(2) OBJECT(..\Objects\IIC.obj)

line level    source

   1          #include "stc8a.h"
   2          #include "IIC.h"
   3          #include "Delay.h"
   4          
   5          unsigned int data timeout;
   6          
   7          void IIC_Init()
   8          {
   9   1        P_SW2 |= 0x80;
  10   1        I2CCFG = 0xd0;                              //使能I2C主机模式
  11   1        I2CMSST = 0x00;
  12   1        P_SW2 &= 0x7f;
  13   1      }
  14          void Wait()
  15          {
  16   1        timeout = 300;
  17   1        while (!(I2CMSST & 0x40))
  18   1        {
  19   2          if(--timeout == 0)
  20   2            break;
  21   2        }
  22   1        I2CMSST &= ~0x40;
  23   1      }
  24          void I2C_Start()
  25          {
  26   1        I2CMSCR = 0x01;                             //发送START命令
  27   1        Wait();
  28   1      }
  29          void I2C_Stop()
  30          {
  31   1        I2CMSCR = 0x06;                             //发送STOP命令
  32   1        Wait();
  33   1      }
  34          void I2C_SendByte(unsigned char dat)
  35          {
  36   1        I2CTXD = dat;                               //写数据到数据缓冲区
  37   1        I2CMSCR = 0x02;                             //发送SEND命令
  38   1        Wait();
  39   1      }
  40          unsigned char I2C_RecvByte()
  41          {
  42   1        I2CMSCR = 0x04;                             //发送RECV命令
  43   1        Wait();
  44   1        return I2CRXD;
  45   1      }
  46          void I2C_RecvACK()
  47          {
  48   1        I2CMSCR = 0x03;                             //发送读ACK命令
  49   1        Wait();
  50   1      }
  51          void I2C_SendACK()
  52          {
  53   1        I2CMSST = 0x00;                             //设置ACK信号
C51 COMPILER V9.52.0.0   IIC                                                               09/12/2021 19:39:18 PAGE 2   

  54   1        I2CMSCR = 0x05;                             //发送ACK命令
  55   1        Wait();
  56   1      }
  57          void I2C_SendNAK()
  58          {
  59   1        I2CMSST = 0x01;                             //设置NAK信号
  60   1        I2CMSCR = 0x05;                             //发送ACK命令
  61   1        Wait();
  62   1      }
  63          //**************************************
  64          //向I2C设备写入一个字节数据
  65          //**************************************
  66          void Single_WriteIIC(unsigned char SlaveAddress,unsigned char REG_Address,unsigned char REG_data)
  67          {
  68   1        P_SW2 |= 0x80;
  69   1        I2C_Start();                  //起始信号
  70   1        I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
  71   1        I2C_RecvACK();
  72   1        I2C_SendByte(REG_Address);    //内部寄存器地址
  73   1        I2C_RecvACK();
  74   1        I2C_SendByte(REG_data);       //内部寄存器数据
  75   1        I2C_RecvACK();
  76   1        I2C_Stop();                   //发送停止信号
  77   1        P_SW2 &= 0x7f;
  78   1      }
  79          //**************************************
  80          //从I2C设备读取一个字节数据
  81          //**************************************
  82          unsigned char Single_ReadIIC(unsigned char SlaveAddress,unsigned char REG_Address)
  83          {
  84   1        unsigned char REG_data;
  85   1        P_SW2 |= 0x80;
  86   1        I2C_Start();                   //起始信号
  87   1        I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
  88   1        I2C_RecvACK();
  89   1        I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始
  90   1        I2C_RecvACK();
  91   1        I2C_Start();                   //起始信号
  92   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
  93   1        I2C_RecvACK();
  94   1        REG_data=I2C_RecvByte();       //读出寄存器数据
  95   1        I2C_SendNAK();                 //发送应答信号
  96   1        I2C_Stop();                    //停止信号
  97   1        P_SW2 &= 0x7f;
  98   1        return REG_data;
  99   1      }
 100          void I2C_Read_MultiBytes(unsigned char DeviceAddr, unsigned char address, unsigned char BytesNum, unsigned
             - char *buf)
 101          {
 102   1        unsigned char i;
 103   1        P_SW2 |= 0x80;
 104   1        I2C_Start();                  //起始信号
 105   1        I2C_SendByte(DeviceAddr);   //发送设备地址+写信号
 106   1        I2C_RecvACK();
 107   1        I2C_SendByte(address);    //内部寄存器地址
 108   1        I2C_RecvACK();
 109   1        I2C_Start();
 110   1        I2C_SendByte(DeviceAddr+1);
 111   1        I2C_RecvACK();
 112   1        for(i = 0; i < (BytesNum - 1); i++)
 113   1        {
 114   2          buf[i] = I2C_RecvByte();
C51 COMPILER V9.52.0.0   IIC                                                               09/12/2021 19:39:18 PAGE 3   

 115   2          I2C_SendACK();  
 116   2        }
 117   1        buf[i] = I2C_RecvByte();
 118   1        I2C_SendNAK();
 119   1        I2C_Stop();                   //发送停止信号
 120   1        P_SW2 &= 0x7f;
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    300    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
