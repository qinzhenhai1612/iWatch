C51 COMPILER V9.52.0.0   IIC                                                               08/02/2021 23:10:22 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN ..\Objects\IIC.obj
COMPILER INVOKED BY: E:\install_files\keil\C51\BIN\C51.EXE ..\User\System\IIC.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..
                    -\User\oled;..\User\rtc;..\User\System;..\User;..\User\bluetooth;..\User\radio;..\User\sensor) DEBUG OBJECTEXTEND PRINT(.
                    -.\Listings\IIC.lst) TABS(2) OBJECT(..\Objects\IIC.obj)

line level    source

   1          #include "stc8a.h"
   2          #include "IIC.h"
   3          #include "Delay.h"
   4          
   5          unsigned int data timeout;
   6           
   7           
   8          
   9          void IIC_Init()
  10          {
  11   1        P_SW2 |= 0x80;     //外设端口控制寄存器
  12   1        I2CCFG = 0xd0;    //使能I2C主机模式,只有在主机模式时，配置时钟数才有效， 对应的时钟数设置为2^5+1=65
  13   1        I2CMSST = 0x00;    //I2C主机状态寄存器，配置为处于空闲状态、开启中断请求，响应请求后用软件清零；
  14   1        P_SW2 &= 0X7f;      //关闭外设端口寄存器，I2C选用P3.2 P3.2,比较位 P4.1,串口4 :P5.2,P5.3, ,串口3：P5.0 P5.
             -1，串口2：P4.0,P4.2
  15   1      } 
  16          
  17          void Wait()
  18          {
  19   1        timeout = 300;
  20   1        while (!(I2CMSST & 0x40))
  21   1        {
  22   2          if(--timeout == 0)
  23   2            break;
  24   2        }
  25   1        I2CMSST &= ~0x40;   //i2cMSST其他位保持不变，中断请求位软件清零   
  26   1      }
  27          void I2C_Start()
  28          {
  29   1        I2CMSCR = 0x01;    //发送START指令
  30   1        Wait();
  31   1      }
  32          void I2C_Stop()
  33          {
  34   1        I2CMSCR = 0x06;   //发送STOP指令
  35   1        Wait();
  36   1      }
  37          void I2C_SendByte(unsigned char dat)
  38          {
  39   1        I2CTXD = dat;        //写数据到数据缓冲区
  40   1        I2CMSCR = 0x02;       //发送SEND命令
  41   1        Wait();
  42   1      }
  43          unsigned char I2C_RecvByte()
  44          {
  45   1        I2CMSCR = 0x04;
  46   1        Wait();
  47   1        return I2CRXD;
  48   1      }
  49          void I2C_RecvACK()
  50          {
  51   1        I2CMSCR = 0x03;       //发送读ACK命令
  52   1        Wait();
C51 COMPILER V9.52.0.0   IIC                                                               08/02/2021 23:10:22 PAGE 2   

  53   1      }
  54          void I2C_SendACK()
  55          {
  56   1        I2CMSST = 0x00;          //设置ACK信号
  57   1        I2CMSCR = 0x05;          //发送ACK命令
  58   1        Wait();
  59   1      }
  60          void I2C_SendNAK()
  61          {
  62   1        I2CMSST = 0x01;          //设置NACK信号
  63   1        I2CMSCR = 0x05;
  64   1        Wait();
  65   1      }
  66          //********************************************
  67          //向I2C设备写入一个字节数据；
  68          //********************************************
  69          void Single_WriteIIC(unsigned char SlaveAddress,unsigned char REG_Address,unsigned char REG_data)
  70          {
  71   1        P_SW2 |= 0x80;                 //访问外部寄存器需要将P_SW2的最高位置1
  72   1        I2C_Start();                   //起始信号 
  73   1        I2C_SendByte(SlaveAddress);   //发送从设备地址+写信号
  74   1        I2C_RecvACK();      
  75   1        I2C_SendByte(REG_Address);     //内部寄存器地址
  76   1        I2C_RecvACK();
  77   1        I2C_SendByte(REG_data);        //内部寄存器数据
  78   1        I2C_RecvACK();
  79   1        I2C_Stop();                   //发送停止信号
  80   1        P_SW2 &= 0x7f;                 //访问结束后最高位清零
  81   1      }
  82          unsigned char Single_ReadIIC(unsigned char SlaveAddress,unsigned char REG_Address)
  83          {
  84   1        unsigned char REG_data;
  85   1        P_SW2 |= 0x80;
  86   1        I2C_Start();                          //起始信号
  87   1        I2C_SendByte(SlaveAddress);           //发送从设备地址+写信号
  88   1        I2C_RecvACK();
  89   1        I2C_SendByte(REG_Address);            //存储单元地址，从0开始
  90   1        I2C_RecvACK();
  91   1        I2C_Start();                          //起始信号
  92   1        I2C_SendByte(SlaveAddress);           //发送从设备地址+读信号
  93   1        I2C_RecvACK();
  94   1        REG_data = I2C_RecvByte();            //读出寄存器数据保存
  95   1        I2C_SendNAK();
  96   1        I2C_Stop();
  97   1        P_SW2 &= 0x7f; 
  98   1        return REG_data;
  99   1      }
 100          void I2C_NoAddr_Write_MultiBytes(unsigned char DeviceAddr,unsigned char BytesNum,unsigned char *buf)
 101          {
 102   1        unsigned char i = 0;
 103   1        P_SW2 |= 0x80;
 104   1        I2C_Start();
 105   1        I2C_SendByte(DeviceAddr);
 106   1        I2C_RecvACK();
 107   1        for(i = 0; i < BytesNum; i++)
 108   1        {
 109   2          I2C_SendByte(buf[i]);
 110   2          I2C_RecvACK();
 111   2        }
 112   1        I2C_Stop();
 113   1        P_SW2 &= 0x7f;
 114   1      }
C51 COMPILER V9.52.0.0   IIC                                                               08/02/2021 23:10:22 PAGE 3   

 115          void I2C_NoAddr_Read_MultiBytes(unsigned char DeviceAddr,unsigned char BytesNum,unsigned char *buf)
 116          {
 117   1        unsigned char i;
 118   1        P_SW2 |= 0x80;
 119   1        I2C_Start();
 120   1        I2C_SendByte(DeviceAddr+1);        //发送设备地址+读信号
 121   1        I2C_RecvACK();
 122   1        for(i = 0; i < (BytesNum - 1); i++ )
 123   1        {
 124   2          buf[i] = I2C_RecvByte();
 125   2          I2C_SendNAK();
 126   2          I2C_Stop();
 127   2        }
 128   1        buf[i] = I2C_RecvByte();
 129   1        I2C_SendNAK();
 130   1        I2C_Stop();
 131   1        P_SW2 &=  0x7f;                    //关闭对外设存储取悦的寻址
 132   1      }
 133          void I2C_Read_MultiBytes(unsigned char DeviceAddr,unsigned char address,unsigned char BytesNum,unsigned ch
             -ar *buf)
 134          {
 135   1        unsigned char i;
 136   1        P_SW2 |= 0x80;                     //开启对外部存储器的寻址
 137   1        I2C_Start();
 138   1        I2C_SendByte(DeviceAddr);          //发送设备地址+写信号
 139   1        I2C_RecvACK();
 140   1        I2C_SendByte(address);             // 内部寄存器地址
 141   1        I2C_RecvACK();
 142   1        I2C_Start();
 143   1        I2C_SendByte(DeviceAddr+1);
 144   1        for(i = 0; i < (BytesNum-1); i++)
 145   1        {
 146   2          buf[i] = I2C_RecvByte();
 147   2          I2C_SendACK();
 148   2        }
 149   1        buf[i] = I2C_RecvByte();
 150   1        I2C_SendNAK();
 151   1        I2C_Stop();
 152   1        P_SW2 &= 0x7f;          
 153   1      }
 154                         
 155          
 156          
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    415    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
